<?xml version="1.0"?>
<launch>

  <arg name="headless"    default="false" doc="Should the gazebo GUI be launched?" />
  <arg name="paused"      default="true"  doc="Should the simulation directly be started?" />
  <arg name="arm_id"      default="panda" doc="Name of the panda robot to spawn" />

  <arg name="x"     default="0" />
  <arg name="y"     default="0" />
  <arg name="z"     default="0" />
  <arg name="roll"  default="0" />
  <arg name="pitch" default="0" />
  <arg name="yaw"   default="0" />
  <arg name="initial_joint_positions"
       default="-J $(arg arm_id)_joint1 0
                -J $(arg arm_id)_joint2 0
                -J $(arg arm_id)_joint3 0
                -J $(arg arm_id)_joint4 -1.57079632679
                -J $(arg arm_id)_joint5 0
                -J $(arg arm_id)_joint6 1.57079632679
                -J $(arg arm_id)_joint7 0"
       />

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(eval not arg('headless'))"/>
    <arg name="use_sim_time" value="true"/>
  </include>

  <group ns="$(arg arm_id)">
    <param name="robot_description"
           command="xacro $(find franka_sim_description)/robots/panda.urdf.xacro
                    arm_id:=$(arg arm_id)
                    connected_to:=world
                    use_franka_transmissions:=true
                    use_gripper:=false">
    </param>

    <rosparam file="$(find franka_control)/config/franka_control_node.yaml" />
    <rosparam file="$(find franka_gazebo)/config/controllers.yaml" />


    <node name="$(arg arm_id)_model_spawner"
          pkg="gazebo_ros"
          type="spawn_model"
          args="-param robot_description -urdf -model $(arg arm_id)
                -x $(arg x)
                -y $(arg y)
                -z $(arg z)
                -R $(arg roll)
                -P $(arg pitch)
                -Y $(arg yaw)
                $(arg initial_joint_positions)">
    </node>

    <node pkg="controller_manager"
          type="spawner"
          name="$(arg arm_id)_controller_spawner"
          respawn="false" output="screen"
          args="state_controller
                franka_state_controller
                cartesian_impedance_example_controller">
    </node>
    <remap to="cartesian_impedance_example_controller/equilibrium_pose" from="equilibrium_pose" />

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher">
      <rosparam param="source_list">[franka_state_controller/joint_states] </rosparam>
      <param name="rate" value="30"/>
    </node>

    <node name="joint_state_desired_publisher" type="joint_state_publisher" pkg="joint_state_publisher" output="screen">
      <rosparam param="source_list">[franka_state_controller/joint_states_desired] </rosparam>
      <param name="rate" value="30"/>
      <remap from="/joint_states" to="/joint_states_desired" />
    </node>

    <node name="interactive_marker" pkg="franka_example_controllers" type="interactive_marker.py" required="true" output="screen">
      <param name="link_name" value="$(arg arm_id)_link0" />
    </node>

  </group>

  <node  pkg="rviz" type="rviz" output="screen" name="rviz" args="-d $(find franka_gazebo)/config/franka_sim_description_with_marker.rviz"/>

</launch>
