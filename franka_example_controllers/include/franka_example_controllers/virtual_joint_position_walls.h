// Copyright (c) 2018 Franka Emika GmbH
#pragma once

#include <franka_example_controllers/joint_wall.h>

#include <array>
#include <memory>

namespace franka_example_controllers {

template <size_t num_dof>
class VirtualJointPositionWalls {
 public:
  /**
   * Creates a new virtual joint position wall instance.
   *
   * @param[in] soft_upper_joint_position_limits
   * @param[in] soft_lower_joint_position_limits
   * @param[in] PD_zone_widths
   * @param[in] D_zone_widths
   * @param[in] PD_zone_stiffnesses
   * @param[in] PD_zone_dampings
   * @param[in] D_zone_dampings
   */
  VirtualJointPositionWalls(const std::array<double, num_dof>& soft_upper_joint_position_limits,
                            const std::array<double, num_dof>& soft_lower_joint_position_limits,
                            const std::array<double, num_dof>& PD_zone_widths,
                            const std::array<double, num_dof>& D_zone_widths,
                            const std::array<double, num_dof>& PD_zone_stiffnesses,
                            const std::array<double, num_dof>& PD_zone_dampings,
                            const std::array<double, num_dof>& D_zone_dampings) {
    for (size_t i = 0; i < num_dof; i++) {
      joint_walls_.at(i) = std::make_unique<JointWall>(
          soft_upper_joint_position_limits[i], soft_lower_joint_position_limits[i],
          PD_zone_widths[i], D_zone_widths[i], PD_zone_stiffnesses[i], PD_zone_dampings[i],
          D_zone_dampings[i]);
    }
  }

  VirtualJointPositionWalls() = delete;

  /**
   * Computes the torques generated by virtual walls
   */
  void computeTorque(const std::array<double, num_dof>& q,
                     const std::array<double, num_dof>& dq,
                     std::array<double, num_dof>& torque) {
    for (size_t i = 0; i < num_dof; i++) {
      torque[i] = joint_walls_[i]->computeTorque(q[i], dq[i]);
    };
  }

  /**
   * Reset joint walls
   */
  void reset() {
    for (auto& jw : joint_walls_) {
      jw->reset();
    }
  }

 private:
  std::array<std::unique_ptr<JointWall>, num_dof> joint_walls_;
};
}  // namespace franka_example_controllers
